local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\96\155","\74\78\181\100"),function(v42) if (v9(v42,2)==(253 -172)) then v30=v8(v11(v42,1,1));return "";else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==1) then return v123;end if (v122==0) then v123=v13(v101,v30);v30=nil;v122=1;end end else return v101;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v102=0;local v103;while true do if (v102==0) then v103=(v43/(2^(v44-1)))%(2^(((v45-(2 -1)) -(v44-1)) + 1)) ;return v103-(v103%1) ;end end else local v104=0;local v105;while true do if (v104==0) then v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * (493 -237)) + v48 ;end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + (7 -4) );v29=v29 + 4 ;return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==0) then v55=v34();v56=v34();v54=1;end if (1==v54) then v57=1;v58=(v31(v56,1,20) * (2^32)) + v55 ;v54=2;end if (v54==3) then if (v59==0) then if (v58==0) then return v60 * (568 -(367 + 201)) ;else local v124=0;while true do if (v124==0) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end if (v54==2) then v59=v31(v56,21,650 -(555 + 64) );v60=((v31(v56,32)==1) and  -1) or (932 -(857 + 74)) ;v54=3;end end end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==1) then v63=v11(v27,v29,(v29 + v61) -(928 -(214 + 713)) );v29=v29 + v61 ;v62=2;end if (3==v62) then return v14(v64);end if (v62==0) then v63=nil;if  not v61 then local v118=0;while true do if (v118==0) then v61=v34();if (v61==0) then return "";end break;end end end v62=1;end if (v62==2) then v64={};for v112=1, #v63 do v64[v112]=v10(v9(v11(v63,v112,v112)));end v62=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=v32();local v80;if (v79==1) then v80=v32()~=(0 + 0) ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,1)==(0 + 0)) then local v108=0;local v109;local v110;local v111;while true do if (v108==0) then v109=v31(v83,2,3);v110=v31(v83,4,6);v108=1;end if (v108==1) then v111={v33(),v33(),nil,nil};if (v109==(1637 -(1523 + 114))) then local v125=0;while true do if (0==v125) then v111[3]=v33();v111[4]=v33();break;end end elseif (v109==1) then v111[3 + 0 ]=v34();elseif (v109==2) then v111[3]=v34() -(2^16) ;elseif (v109==(3 -0)) then local v136=0;while true do if (v136==0) then v111[1068 -(68 + 997) ]=v34() -(2^16) ;v111[4]=v33();break;end end end v108=2;end if (v108==3) then if (v31(v110,3,3)==1) then v111[4]=v70[v111[4]];end v65[v82]=v111;break;end if (2==v108) then if (v31(v110,1,1)==(1271 -(226 + 1044))) then v111[2]=v70[v111[2]];end if (v31(v110,2,8 -6 )==1) then v111[3]=v70[v111[120 -(32 + 85) ]];end v108=3;end end end end for v84=1,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1 + 0 ;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v106=0,v94 do if (v106>=v88) then v92[v106-v88 ]=v93[v106 + 1 ];else v96[v106]=v93[v106 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do local v107=0;while true do if (v107==0) then v98=v86[v90];v99=v98[1];v107=1;end if (v107==1) then if (v99<=47) then if (v99<=23) then if (v99<=11) then if (v99<=5) then if (v99<=2) then if (v99<=(0 + 0)) then v96[v98[2]]=v98[3]~=0 ;elseif (v99==1) then v96[v98[2]]=v96[v98[3]];else v96[v98[2]]=v74[v98[960 -(892 + 65) ]];end elseif (v99<=3) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v99==4) then local v213=0;local v214;local v215;local v216;while true do if (v213==1) then v216=0;for v435=v214,v98[4] do v216=v216 + 1 ;v96[v435]=v215[v216];end break;end if (0==v213) then v214=v98[2];v215={v96[v214](v21(v96,v214 + 1 ,v91))};v213=1;end end else do return;end end elseif (v99<=8) then if (v99<=6) then v96[v98[2]][v98[3]]=v98[9 -5 ];elseif (v99==(12 -5)) then local v217=0;local v218;local v219;local v220;while true do if (v217==1) then v220=v98[3];for v438=1,v220 do v219[v438]=v96[v218 + v438 ];end break;end if (0==v217) then v218=v98[2];v219=v96[v218];v217=1;end end else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=(15 -6)) then v96[v98[2]]={};elseif (v99>10) then local v222=v98[2];v96[v222]=v96[v222](v21(v96,v222 + 1 ,v91));else local v224=0;local v225;local v226;local v227;local v228;while true do if (v224==2) then for v441=v225,v91 do local v442=0;while true do if (v442==0) then v228=v228 + (181 -(67 + 113)) ;v96[v441]=v226[v228];break;end end end break;end if (v224==0) then v225=v98[2];v226,v227=v89(v96[v225](v21(v96,v225 + (351 -(87 + 263)) ,v91)));v224=1;end if (v224==1) then v91=(v227 + v225) -1 ;v228=0;v224=2;end end end elseif (v99<=17) then if (v99<=14) then if (v99<=(9 + 3)) then v96[v98[2]][v98[3]]=v96[v98[4]];elseif (v99>(31 -18)) then local v229=0;local v230;local v231;local v232;local v233;while true do if (v229==0) then v230=v98[2 + 0 ];v231,v232=v89(v96[v230](v21(v96,v230 + 1 ,v91)));v229=1;end if (v229==2) then for v443=v230,v91 do local v444=0;while true do if (v444==0) then v233=v233 + 1 ;v96[v443]=v231[v233];break;end end end break;end if (v229==1) then v91=(v232 + v230) -1 ;v233=0;v229=2;end end else local v234=0;local v235;while true do if (v234==0) then v235=v98[2];v96[v235]=v96[v235](v21(v96,v235 + 1 ,v98[3]));break;end end end elseif (v99<=(59 -44)) then v96[v98[954 -(802 + 150) ]]=v73[v98[3]];elseif (v99==16) then local v236=v98[2];do return v21(v96,v236,v91);end else v96[v98[2]]=v96[v98[3]];end elseif (v99<=20) then if (v99<=18) then v96[v98[2]]=v73[v98[3]];elseif (v99==(50 -31)) then local v239=v98[2];local v240={v96[v239](v21(v96,v239 + 1 ,v91))};local v241=0;for v330=v239,v98[4] do v241=v241 + (1 -0) ;v96[v330]=v240[v241];end else local v242=0;local v243;while true do if (v242==0) then v243=v98[2];v96[v243](v96[v243 + 1 ]);break;end end end elseif (v99<=21) then v96[v98[2]]={};elseif (v99>22) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else do return;end end elseif (v99<=35) then if (v99<=(22 + 7)) then if (v99<=26) then if (v99<=24) then v90=v98[3];elseif (v99==25) then local v244=0;local v245;while true do if (v244==0) then v245=v98[2];v96[v245](v21(v96,v245 + 1 ,v91));break;end end else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=27) then v96[v98[2]]();elseif (v99>(1025 -(915 + 82))) then local v247=v98[2];local v248=v96[v247];local v249=v96[v247 + 2 ];if (v249>0) then if (v248>v96[v247 + 1 ]) then v90=v98[3];else v96[v247 + 3 ]=v248;end elseif (v248<v96[v247 + 1 ]) then v90=v98[3];else v96[v247 + 3 ]=v248;end else v96[v98[5 -3 ]]=v98[3];end elseif (v99<=(19 + 13)) then if (v99<=30) then local v153=0;local v154;local v155;local v156;while true do if (v153==1) then v156={};v155=v18({},{[v7("\238\101\83\7\207\178\253","\69\177\58\58\105\171\215\133")]=function(v369,v370) local v371=0;local v372;while true do if (v371==0) then v372=v156[v370];return v372[1][v372[2]];end end end,[v7("\214\190\76\240\254\136\76\241\236\153","\149\137\225\34")]=function(v373,v374,v375) local v376=v156[v374];v376[1][v376[2]]=v375;end});v153=2;end if (2==v153) then for v378=1,v98[4] do local v379=0;local v380;while true do if (v379==0) then v90=v90 + 1 ;v380=v86[v90];v379=1;end if (1==v379) then if (v380[1]==1) then v156[v378-(1 -0) ]={v96,v380[3]};else v156[v378-1 ]={v73,v380[3]};end v95[ #v95 + 1 ]=v156;break;end end end v96[v98[2]]=v40(v154,v155,v74);break;end if (v153==0) then v154=v87[v98[3]];v155=nil;v153=1;end end elseif (v99==31) then v96[v98[2]]();elseif  not v96[v98[1189 -(1069 + 118) ]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=33) then local v157=0;local v158;while true do if (v157==0) then v158=v98[2];v96[v158]=v96[v158]();break;end end elseif (v99>34) then v96[v98[2]]=v74[v98[3]];else local v254=v98[2];do return v96[v254](v21(v96,v254 + (2 -1) ,v98[3]));end end elseif (v99<=41) then if (v99<=38) then if (v99<=36) then v96[v98[2]]=v96[v98[6 -3 ]]%v98[4] ;elseif (v99==37) then v96[v98[2]]=v96[v98[3]][v98[4]];else local v257=0;local v258;while true do if (v257==0) then v258=v98[2];v96[v258](v21(v96,v258 + 1 ,v91));break;end end end elseif (v99<=39) then local v160=0;local v161;local v162;while true do if (v160==1) then for v382=v161 + 1 ,v98[3] do v15(v162,v96[v382]);end break;end if (v160==0) then v161=v98[2];v162=v96[v161];v160=1;end end elseif (v99==40) then local v259=0;local v260;while true do if (0==v259) then v260=v98[2];v96[v260]=v96[v260](v96[v260 + 1 ]);break;end end else local v261=v98[2];local v262=v96[v261];for v339=v261 + 1 ,v91 do v15(v262,v96[v339]);end end elseif (v99<=(8 + 36)) then if (v99<=42) then v96[v98[2]]=v96[v98[4 -1 ]]%v96[v98[4]] ;elseif (v99>43) then local v263=0;local v264;local v265;local v266;local v267;while true do if (v263==2) then for v449=v264,v91 do v267=v267 + 1 ;v96[v449]=v265[v267];end break;end if (v263==1) then v91=(v266 + v264) -1 ;v267=0;v263=2;end if (v263==0) then v264=v98[2];v265,v266=v89(v96[v264](v21(v96,v264 + 1 ,v98[3])));v263=1;end end else v96[v98[2]][v96[v98[3 + 0 ]]]=v96[v98[4]];end elseif (v99<=45) then v90=v98[3];elseif (v99>(837 -(368 + 423))) then local v270=0;local v271;while true do if (v270==0) then v271=v98[2];do return v96[v271](v21(v96,v271 + 1 ,v98[3]));end break;end end else v96[v98[2]]= #v96[v98[3]];end elseif (v99<=71) then if (v99<=59) then if (v99<=53) then if (v99<=50) then if (v99<=48) then local v165=v98[2];local v166=v96[v98[3]];v96[v165 + 1 ]=v166;v96[v165]=v166[v98[12 -8 ]];elseif (v99>49) then for v340=v98[2],v98[3] do v96[v340]=nil;end else v96[v98[20 -(10 + 8) ]]=v40(v87[v98[3]],nil,v74);end elseif (v99<=(196 -145)) then local v170=0;local v171;while true do if (v170==0) then v171=v98[444 -(416 + 26) ];do return v21(v96,v171,v91);end break;end end elseif (v99==52) then local v274=v98[2];v96[v274](v21(v96,v274 + 1 ,v98[3]));else local v275=v98[6 -4 ];v96[v275]=v96[v275](v21(v96,v275 + 1 ,v91));end elseif (v99<=56) then if (v99<=54) then v96[v98[2]]=v98[3];elseif (v99==55) then local v277=v98[1 + 1 ];local v278=v96[v277];for v343=v277 + 1 ,v91 do v15(v278,v96[v343]);end else local v279=v98[2];local v280,v281=v89(v96[v279](v21(v96,v279 + (1 -0) ,v98[3])));v91=(v281 + v279) -1 ;local v282=0;for v344=v279,v91 do v282=v282 + 1 ;v96[v344]=v280[v282];end end elseif (v99<=57) then local v174=0;local v175;local v176;while true do if (v174==0) then v175=v98[2];v176={};v174=1;end if (1==v174) then for v383=1, #v95 do local v384=v95[v383];for v423=0, #v384 do local v424=0;local v425;local v426;local v427;while true do if (v424==1) then v427=v425[2];if ((v426==v96) and (v427>=v175)) then v176[v427]=v426[v427];v425[1]=v176;end break;end if (v424==0) then v425=v384[v423];v426=v425[1];v424=1;end end end end break;end end elseif (v99==58) then local v283=v98[2];v96[v283]=v96[v283](v21(v96,v283 + 1 ,v98[441 -(145 + 293) ]));else local v285=v98[432 -(44 + 386) ];v96[v285](v96[v285 + 1 ]);end elseif (v99<=65) then if (v99<=62) then if (v99<=(1546 -(998 + 488))) then v96[v98[2]]=v96[v98[1 + 2 ]]%v98[4] ;elseif (v99>61) then v96[v98[2]]=v98[3 + 0 ]~=0 ;elseif (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=63) then local v178=0;local v179;local v180;local v181;local v182;while true do if (v178==2) then for v386=v179,v91 do v182=v182 + 1 ;v96[v386]=v180[v182];end break;end if (v178==1) then v91=(v181 + v179) -1 ;v182=0;v178=2;end if (v178==0) then v179=v98[2];v180,v181=v89(v96[v179](v96[v179 + 1 ]));v178=1;end end elseif (v99>64) then v96[v98[2]][v98[3]]=v96[v98[4]];else local v289=v98[2];local v290=v96[v98[3]];v96[v289 + 1 ]=v290;v96[v289]=v290[v98[4]];end elseif (v99<=68) then if (v99<=66) then v96[v98[2]][v96[v98[3]]]=v96[v98[776 -(201 + 571) ]];elseif (v99>67) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else local v294=v98[2];local v295=v96[v294];local v296=v96[v294 + (1140 -(116 + 1022)) ];if (v296>0) then if (v295>v96[v294 + 1 ]) then v90=v98[3];else v96[v294 + 3 ]=v295;end elseif (v295<v96[v294 + 1 ]) then v90=v98[3];else v96[v294 + 3 ]=v295;end end elseif (v99<=69) then local v185=0;local v186;while true do if (v185==0) then v186=v98[8 -6 ];v96[v186]=v96[v186](v96[v186 + 1 ]);break;end end elseif (v99==70) then local v297=0;local v298;local v299;local v300;while true do if (v297==0) then v298=v98[2];v299=v96[v298 + 2 ];v297=1;end if (1==v297) then v300=v96[v298] + v299 ;v96[v298]=v300;v297=2;end if (v297==2) then if (v299>0) then if (v300<=v96[v298 + 1 ]) then local v481=0;while true do if (0==v481) then v90=v98[3];v96[v298 + 3 ]=v300;break;end end end elseif (v300>=v96[v298 + 1 ]) then local v482=0;while true do if (v482==0) then v90=v98[3];v96[v298 + 3 ]=v300;break;end end end break;end end else v96[v98[2]]=v40(v87[v98[2 + 1 ]],nil,v74);end elseif (v99<=83) then if (v99<=77) then if (v99<=(270 -196)) then if (v99<=72) then local v187=v98[2];v96[v187](v21(v96,v187 + 1 ,v98[3]));elseif (v99>73) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[10 -7 ];end elseif (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=75) then for v204=v98[861 -(814 + 45) ],v98[3] do v96[v204]=nil;end elseif (v99>76) then local v302=0;local v303;while true do if (v302==0) then v303=v98[2];v96[v303]=v96[v303]();break;end end elseif (v98[2]==v96[v98[4]]) then v90=v90 + (2 -1) ;else v90=v98[1 + 2 ];end elseif (v99<=(29 + 51)) then if (v99<=78) then v96[v98[2]]= #v96[v98[3]];elseif (v99>(964 -(261 + 624))) then v73[v98[3]]=v96[v98[2]];else local v306=v98[2];local v307=v98[6 -2 ];local v308=v306 + 2 ;local v309={v96[v306](v96[v306 + 1 ],v96[v308])};for v351=1,v307 do v96[v308 + v351 ]=v309[v351];end local v310=v309[1];if v310 then v96[v308]=v310;v90=v98[3];else v90=v90 + 1 ;end end elseif (v99<=81) then local v189=0;local v190;local v191;local v192;while true do if (v189==1) then v192=v96[v190] + v191 ;v96[v190]=v192;v189=2;end if (v189==0) then v190=v98[2];v191=v96[v190 + 2 ];v189=1;end if (v189==2) then if (v191>0) then if (v192<=v96[v190 + 1 ]) then local v460=0;while true do if (v460==0) then v90=v98[3];v96[v190 + 3 ]=v192;break;end end end elseif (v192>=v96[v190 + 1 ]) then local v461=0;while true do if (v461==0) then v90=v98[3];v96[v190 + 3 ]=v192;break;end end end break;end end elseif (v99==82) then v96[v98[2]][v96[v98[3]]]=v98[4];else v96[v98[2]][v98[3]]=v98[1084 -(1020 + 60) ];end elseif (v99<=89) then if (v99<=86) then if (v99<=84) then local v193=v98[2];local v194=v98[4];local v195=v193 + (1425 -(630 + 793)) ;local v196={v96[v193](v96[v193 + 1 ],v96[v195])};for v206=3 -2 ,v194 do v96[v195 + v206 ]=v196[v206];end local v197=v196[1];if v197 then local v315=0;while true do if (0==v315) then v96[v195]=v197;v90=v98[3];break;end end else v90=v90 + 1 ;end elseif (v99==(402 -317)) then local v316=v98[2];local v317=v96[v316];local v318=v98[3];for v357=1 + 0 ,v318 do v317[v357]=v96[v316 + v357 ];end else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99<=87) then local v198=0;local v199;local v200;local v201;while true do if (v198==1) then v201={};v200=v18({},{[v7("\13\197\230\62\248\205\42","\168\82\154\143\80\156")]=function(v395,v396) local v397=0;local v398;while true do if (v397==0) then v398=v201[v396];return v398[1][v398[2]];end end end,[v7("\186\141\61\14\95\71\135\129\183\43","\233\229\210\83\107\40\46")]=function(v399,v400,v401) local v402=0;local v403;while true do if (0==v402) then v403=v201[v400];v403[1][v403[2]]=v401;break;end end end});v198=2;end if (2==v198) then for v404=1,v98[4] do local v405=0;local v406;while true do if (v405==0) then v90=v90 + (3 -2) ;v406=v86[v90];v405=1;end if (v405==1) then if (v406[1]==1) then v201[v404-1 ]={v96,v406[3]};else v201[v404-1 ]={v73,v406[3]};end v95[ #v95 + 1 ]=v201;break;end end end v96[v98[2]]=v40(v199,v200,v74);break;end if (v198==0) then v199=v87[v98[3]];v200=nil;v198=1;end end elseif (v99==88) then v96[v98[2]]=v96[v98[3]] + v98[4] ;else v96[v98[2]]=v96[v98[3]] + v98[4] ;end elseif (v99<=92) then if (v99<=90) then v73[v98[3]]=v96[v98[2]];elseif (v99>91) then local v323=v98[2];local v324,v325=v89(v96[v323](v96[v323 + 1 ]));v91=(v325 + v323) -1 ;local v326=0;for v362=v323,v91 do v326=v326 + 1 ;v96[v362]=v324[v326];end else do return v96[v98[2]]();end end elseif (v99<=94) then if (v99>93) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;else do return v96[v98[1915 -(1789 + 124) ]]();end end elseif (v99>95) then if  not v96[v98[2]] then v90=v90 + (767 -(745 + 21)) ;else v90=v98[3];end else local v328=v98[2];local v329={};for v365=1, #v95 do local v366=0;local v367;while true do if (v366==0) then v367=v95[v365];for v467=0, #v367 do local v468=0;local v469;local v470;local v471;while true do if (v468==0) then v469=v367[v467];v470=v469[1];v468=1;end if (v468==1) then v471=v469[2];if ((v470==v96) and (v471>=v328)) then local v499=0;while true do if (v499==0) then v329[v471]=v470[v471];v469[1]=v329;break;end end end break;end end end break;end end end end v90=v90 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--
